<!--#include virtual="/plumbing/html.inc" -->
<!--#include virtual="/plumbing/var.inc" -->
<!--#set var="title" value="using static site checker" -->
<title>
<!--#echo encoding="none" var="title" -->
</title>
<!--#include virtual="/plumbing/header.inc" -->
<!--#include virtual="/plumbing/blog-section.inc" -->
<!--#include virtual="/plumbing/html-top-start.inc" -->
<!--#include virtual="/plumbing/html-top-end.inc" -->
<!--#include virtual="/plumbing/blog-schema.inc" -->
<data class="u-url u-uid" value="<!--#echo encoding="none" var="address" --><!--#echo encoding="none" var="DOCUMENT_URI" -->">
</data>

<h1 itemprop="name" class="p-name">
<!--#echo encoding="none" var="title" -->
</h1>

<h2>Running <!--#echo encoding="none" var="short" --></h2>

<p>
To run <!--#echo encoding="none" var="short" -->, bring up the command line, change to <!--#echo encoding="none" var="short" -->&rsquo;s installation
directory, and type:
</p>

<table>
<tr><td>Windows</td><td><kbd><!--#echo encoding="none" var="short" --></kbd></td></tr>
<tr><td>Unix</td><td><kbd>./<!--#echo encoding="none" var="short" --></kbd></td></tr>
</table>

<p>
If it&rsquo;s installed correctly, it should respond with &copy; info.
</p>

<p>
It is possible to set up configuration files, but, to start, we&rsquo;ll try
a simple set of command line options. If the HTML files belonging to
your website is located in the current directory, and the main index
file is called <a href="/index.html">index.html</a>, then all you need type is:
</p>

<code>
<!--#echo encoding="none" var="short" --> .
</code>

<p>
&hellip; and off it will go, reporting any issues it finds in all HTML files in
the current directory and its descendants.
</p>

<h3>Reports</h3>

<p>
When <!--#echo encoding="none" var="short" --> reports issues, it reports the HTML where it spots the
problem, with the approximate line number. This may be after the actual
location of the problem. Consider, for example:
</p>

<code>
&lt;P&gt;Taost&lt;A href=&ldquo;https://example.com/superdoopersecretrecipe.html&rdquo;
title=&ldquo;what a wonderful page oh so wow&rdquo; onclick=&ldquo;halt-and-catch-fire&rdquo;
onhover=&ldquo;winkembarrassingly&rdquo; whimper=frequently&gt;d wombats are a
delicious&lt;/A&gt; thing.&lt;/P&gt;
</code>

<img alt="riff on name" class="mw50 inline_illustration_right" src="/image/ssc-msgdb-se-w1.jpg" title="made with studio artist 5.5">

<p>
The word <!--#echo encoding="none" var="short" --> spots is &ldquo;Taostd&rdquo;. It knows there&rsquo;s a word to check when
it gets to the end of the word, e.g. at the space that follows it. In
this case, the word is interrupted by rather a lot of HTML, which is
ignored when checking spelling. Because the intervening HTML is so
long, crossing a number of lines, and <!--#echo encoding="none" var="short" --> reports small snippets of
HTML per issue (to avoid spouting too much verbiage), it will not show
sufficient HTML to see the entire misspelt word. That&rsquo;s why, usually,
you should take the snippet and corresponding line number as a hint,
not an absolute. There is an issue, it is near the reported HTML and
line number, but, in this case, is not actually there. Of course, the
report of the misspelt word mentions the word it considers misspelt.
</p>

<h3>arguments</h3>

<p>
<!--#echo encoding="none" var="short" --> has a number of switches, including:
</p>

<table>
<tr><td>-h</td><td>Output simple help</td></tr>
<tr><td>-V</td><td>Output <!--#echo encoding="none" var="short" -->&rsquo;s version</td></tr>
<tr><td>-f&nbsp;f</td><td>Load configuration from file f</td></tr>
<tr><td>-F</td><td>Load configuration from ~/.<!--#echo encoding="none" var="short" -->/config</td></tr>

<tr><td>-o&nbsp;f</td><td>Output a report to file f</td></tr>

<tr><td>-v&nbsp;x</td><td>Report level x issues, where x is
<table>
<tr><td>0</td><td>None</td></tr>
<tr><td>1</td><td>Catastrophes</td></tr>
<tr><td>2</td><td>Abhorrences</td></tr>
<tr><td>3</td><td>Errors</td></tr>
<tr><td>4</td><td>Warnings</td></tr>
<tr><td>5</td><td>Info</td></tr>
<tr><td>6</td><td>Comments</td></tr>
<tr><td>7</td><td>Debug</td></tr>
<tr><td>8&hellip;</td><td>more and more debug</td></tr>
</table></td></tr>

<tr><td>-I</td><td>Process Server Side Includes</td></tr>
<tr><td>-g&nbsp;d</td><td>set the root directory to d (defaults to current directory)</td></tr>
<tr><td>-x&nbsp;x</td><td>treat files with extension x as HTML/XHTML</td></tr>
<tr><td>-i&nbsp;f</td><td>file f is default (default index.html)</td></tr>
<tr><td>-s&nbsp;x</td><td>x is the local site&rsquo;s domain name</td></tr>
<tr><td>-L&nbsp;vd</td><td>Define a virtual directory (vd is formatted
            &lsquo;virtual=physical&rsquo;)</td></tr>

<tr><td>-e</td><td>Check external links (each link is checked once per run,
            not once per encounter)</td></tr>
<tr><td>-l</td><td>Check internal links</td></tr>
<tr><td>-O</td><td>Report each broken link once, not each time it&rsquo;s found</td></tr>
<tr><td>-r</td><td>Do not check for https certificate revocation</td></tr>
<tr><td>-X</td><td>Check crosslinked IDs</td></tr>

<tr><td>-Y&nbsp;1</td><td>Disable multithreading</td></tr>

<tr><td>-M</td><td>Check microformats use of class attribute</td></tr>
<tr><td>-m</td><td>Check ontologies use of WhatWG microdata attributes</td></tr>

<tr><td>-S</td><td>Report site statistics</td></tr>

<tr><td>-A</td><td>Report switches noticed by <!--#echo encoding="none" var="short" -->, and exit.</td></tr>
</table>

<p>
If you find yourself having switch problems, add -A to your command
line to see what switches <!--#echo encoding="none" var="short" --> has noticed. -A kyboshes other
processing.
</p>

<p>
A full list of switches is given by the -h switch, &amp; <a href="/args/index.shtml">can be found here</a>.
</p>

<p>
Command line arguments can also be assembled <a href="/args/config.shtml">in configuration files: more gen here</a>.
</p>

<h3>Environment</h3>

<p>
<!--#echo encoding="none" var="short" --> will process the following environment variables:
</p>

<table>
<tr><td>SSC_CONFIG</td><td>name of configuration file if none given on the command
            line</td></tr>
<tr><td>SSC_ARGS</td><td>command line switches</td></tr>
</table>

<p>
<!--#echo encoding="none" var="short" --> will recognise when it is running in a CGI environment by
processing QUERY_STRING and other CGI environment variables. In such
circumstances, QUERY_STRING must contain a parameter called
html.snippet, with an appropriate value.
</p>

<img alt="riff on name" class="mw50 inline_illustration_right" src="/image/ssc-msgdb-sfx-src1.jpg" title="made with studio artist 5.5">

<h2>Potential gotchas</h2>

<h3>Versions</h3>

<p>
For HTML, <!--#echo encoding="none" var="short" --> defaults to a version of the living standard that&rsquo;s
contemporary to the version of <!--#echo encoding="none" var="short" -->. The same applies to other document
types. In all cases, though, if the document itself specifies a
particular version (such as HTML 3.2), then that applies.
</p>

<p>
The version indicated by the DOCTYPE can be very broad. For example,
the HTML 5 doctype specifies HTML 5 alone, but not which flavour (W3 or
living standard), nor which revision&mdash;there have been dramatic changes between the original in 2005 and that of today.
</p>

<p>
If you are verifying HTML, and it contains some CSS, MathML, SVG, or
other content, then <!--#echo encoding="none" var="short" --> will attempt to guess the version of the latter
from the former, unless you say otherwise.
</p>

<p>
All this is why that, if you want to be precise about document
verification, specify versions, either with a switch or an entry in a
configuration file. If your HTML contains MathML/SVG/etc. snippets,
then specify those versions too.
</p>

<h3>fruity compilers</h3>

<p>
Unfortunately, some fruity system suppliers sometimes release buggy
compilers. These bugs can often be avoided by using an alternative
compiler (try gcc), disabling multithreading at runtime (use <kbd>-Y 1</kbd>), or not
upgrading your system until the fruity supplier releases a less unreliable
version of their noisy compiler.
</p>



<h3>More info</h3>

<p>
The <!--#echo encoding="none" var="short" --> source root includes some text files with more information.
</p>

<table>
<tr><td>gen.text</td><td>Command line man page</td></tr>
<tr><td>build.txt</td><td>How to make your own copy of <!--#echo encoding="none" var="short" --></td></tr>
<tr><td>releasenotes.txt</td><td>A history of features and featurettes</td></tr>
<tr><td>README.txt</td><td>An introduction to <!--#echo encoding="none" var="short" --></td></tr>
<tr><td>LICENCE.txt</td><td>Component licences</td></tr>
<tr><td>LICENSE.txt</td><td>The GNU General Licence Version 3</td></tr>
</table>

<!--#include virtual="/plumbing/under.inc" -->
<!--#include virtual="/plumbing/html-end.inc" -->
