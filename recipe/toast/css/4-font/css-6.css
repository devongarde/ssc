sub {
  vertical-align: sub;
  font-size: smaller;
  line-height: normal;
}

@supports ( font-variant-position: sub ) {
  sub {
  vertical-align: baseline;
  font-size: 100%;
  line-height: inherit;
  font-variant-position: sub;
  }
}

#example1 { font-variant-caps: small-caps; }#example2 { font-variant-caps: small-caps; font-feature-settings: 'smcp' 0; }

blockquote { font-style: italic; }blockquote:first-line { font-variant: small-caps; }

sup { font-variant-position: super; }

.ordinal { font-variant-numeric: ordinal; }

.amount { font-variant-numeric: oldstyle-nums diagonal-fractions; }

@font-feature-values Noble Script { @swash { swishy: 1; flowing: 2; } }

p {
  font-family: Noble Script;
  font-variant-alternates: swash(flowing); /* use swash alternate #2 */
}

p { font-variant-alternates: swash(unknown-value); } /* not a defined value, ignored */
p { font-variant-alternates: normal; }

@font-feature-values Otaru Kisa {
  @annotation { circled: 1; black-boxed: 3; }
}
@font-feature-values Taisho Gothic {
  @annotation { boxed: 1; circled: 4; }
}

h3.title {
  /* circled form defined for both fonts */
  font-family: Otaru Kisa, Taisho Gothic;
  font-variant: annotation(circled);
}

/* Default */
@font-feature-values foo {
    @swash { pretty: 1; cool: 2; }
}

/* Repeated declaration names */
@font-feature-values foo {
    @swash { pretty: 0; pretty: 1; cool: 2; }
}

/* Multiple blocks of the same type */
@font-feature-values foo {
    @swash { pretty: 1; }
    @swash { cool: 2; }
}

/* Multiple rules for the same family */
@font-feature-values foo {
    @swash { pretty: 1; }
}
@font-feature-values foo {
    @swash { cool: 2; }
}

@font-feature-values Bongo {
    @swash { ornate: 1; }
    annotation { boxed: 4; } /* should be @annotation! */
    @swash { double-loops: 1; flowing: -1; } /* negative value */
    @ornaments ; /* incomplete definition */
    @styleset { double-W: 14; sharp-terminals: 16 1 } /* missing ; */
    redrum  /* random editing mistake */
}

@font-feature-values Bongo {
    @swash { ornate: 1; }
    @swash { double-loops: 1; }
    @styleset { double-W: 14; sharp-terminals: 16 1; }
}

@font-feature-values Mercury Serif {
    @styleset {
        stacked-g: 3; /* "two-storey" versions of g, a */
        stacked-a: 4;
    }
}

@font-feature-values Mercury Serif {
    @styleset {
       geometric-m: 7; /* alternate version of m */
    }
}

body {
    font-family: Mercury Serif, serif;

    /* enable both the use of stacked g and alternate m */
    font-variant-alternates: styleset(stacked-g, geometric-m);
}

@font-feature-values Mars Serif {  @styleset {
  alt-g: 1;        /* implies ss01 = 1 */
  curly-quotes: 3; /* implies ss03 = 1 */
  code: 4 5;       /* implies ss04 = 1, ss05 = 1 */
  }

  @styleset {
  dumb: 125;        /* >99, ignored */
  }

  @swash {
  swishy: 3 5;     /* more than 1 value for swash, syntax error */
  }
}

p.codeblock {
  /* implies ss03 = 1, ss04 = 1, ss05 = 1 */
  font-variant-alternates: styleset(curly-quotes, code);
}

@font-feature-values MM Greek {  @character-variant { alpha-2: 1 2; }   /* implies cv01 = 2 */
  @character-variant { beta-3: 2 3; }    /* implies cv02 = 3 */
  @character-variant { epsilon: 5 3 6; } /* more than 2 values, syntax error, definition ignored */
  @character-variant { gamma: 12; }      /* implies cv12 = 1 */
  @character-variant { zeta:   20 3; }   /* implies cv20 = 3 */
  @character-variant { zeta-2: 20 2; }   /* implies cv20 = 2 */
  @character-variant { silly: 105; }     /* >99, ignored */
  @character-variant { dumb: 323 3; }    /* >99, ignored */
}

#title {
  /* use the third alternate beta, first alternate gamma */
  font-variant-alternates: character-variant(beta-3, gamma);
}

p {
  /* zeta-2 follows zeta, implies cv20 = 2  */
  font-variant-alternates: character-variant(zeta, zeta-2);
}

.special {
  /* zeta follows zeta-2, implies cv20 = 3  */
  font-variant-alternates: character-variant(zeta-2, zeta);
}

@font-feature-values Athena Ruby {  @character-variant {
  leo-B: 2 1;
  leo-M: 13 3;
  leo-alt-N: 14 1;
  leo-N: 14 2;
  leo-T: 20 1;
  leo-U: 21 2;
  leo-alt-U: 21 4;
  }
}

p {
  font-variant: discretionary-ligatures
        character-variant(leo-B, leo-M, leo-N, leo-T, leo-U);
}

span.alt-N {
  font-variant-alternates: character-variant(leo-alt-N);
}

span.alt-U {
  font-variant-alternates: character-variant(leo-alt-U);
}

.fleep
{   font-feature-settings: "smcp", "swsh" 2; }

.chem {
  font-feature-settings: 'sinf'
}

.wurble
{   font-feature-settings: "dlig" 1;       /* dlig=1 enable discretionary ligatures */
font-feature-settings: "smcp" on;      /* smcp=1 enable small caps */
font-feature-settings: 'c2sc';         /* c2sc=1 enable caps to small caps */
font-feature-settings: "liga" off;     /* liga=0 no common ligatures */
font-feature-settings: "tnum", 'hist'; /* tnum=1, hist=1 enable tabular numbers and historical forms */
font-feature-settings: "tnum" "hist";  /* invalid, need a comma-delimited list */
font-feature-settings: "silly" off;    /* invalid, tag too long */
font-feature-settings: "PKRN";         /* PKRN=1 enable custom feature */
font-feature-settings: dlig;           /* invalid, tag must be a string */
}

body { font-feature-settings: "hwid"; /* Half-width OpenType feature */ }

body { font-language-override: "SRB"; /* Serbian OpenType language tag */ }
